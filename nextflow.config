includeConfig "$baseDir/params.config"

process.shell = ['/bin/bash','-e']

manifest {
  name = "DTBW"
  version = '0.2'
}

conda.enabled = true

// check if cacheDir = "" needed
singularity {
  autoMounts = 'true'
  singularity.enabled = true
  runOptions = '-B /scratch -B /home --nv'
}

profiles {

   slurm {
     executor {
        name="slurm"
        queueSize = 100
        clusterOptions = '--qos=1day'
        submitRateLimit = '5 sec'
        exitReadTimeout = '30 min'

     }

      process {
        containerOptions = { workflow.containerEngine == "docker" ? '-u $(id -u):$(id -g)': null}
        time = '15 min'
        clusterOptions = '--qos=30min'
        memory = '2G'
        errorStrategy = 'ignore'

        withName: 'prepare_ligand_sdf' {
          time = '60 min'
          clusterOptions = '--qos=6hours'
        }

        withName: 'diffdock' {
          memory = '42G'
          clusterOptions = '--qos=1day --gres=gpu:1 --partition=a100,rtx8000 --ntasks=10'
          time = { 6.hour * task.attempt }
          errorStrategy = { task.exitStatus in [143] ? 'retry' : 'ignore' }
          maxRetries = 3
        }

        withName: 'diffdock_single' {
          memory = '42G'
          clusterOptions = '--qos=6hours --gres=gpu:1 --partition=a100,rtx8000 --ntasks=10'
          time = { 15.min * Math.pow(2, task.attempt) }
          errorStrategy = { task.exitStatus in [143] ? 'retry' : 'ignore' }
          maxRetries = 3
        }
        
        withName: 'tankbind' {
          memory = '20G'
          time = { 10.min * task.attempt }
          errorStrategy = { task.exitStatus in [143] ? 'retry' : 'ignore' }
          maxRetries = 3
        }
        
        withName: 'p2rank' {
          memory = '8G'
          time = { 10.min * task.attempt }
          errorStrategy = { task.exitStatus in [143] ? 'retry' : 'ignore' }
          maxRetries = 3
        }
        
        withName: 'vina' {
          cpus = '8'
          memory = '8G'
          clusterOptions = '--qos=1day'
          time = { 15.min * Math.pow(2, task.attempt) }
          errorStrategy = { task.exitStatus in [143] ? 'retry' : 'ignore' }
          maxRetries = 3
        }

        withName: 'smina' {
          cpus = '8'
          memory = '8G'
          clusterOptions = '--qos=1day'
          time = { 30.min * task.attempt }
          errorStrategy = { task.exitStatus in [143] ? 'retry' : 'ignore' }
          maxRetries = 3
        }

        withName: 'gnina' {
          memory = '8G'
          clusterOptions = '--qos=6hours --gres=gpu:1 --partition=a100,rtx8000 --ntasks=10'
          time = { 2.hour * task.attempt }
          errorStrategy = { task.exitStatus in [143] ? 'retry' : 'ignore' }
          maxRetries = 3
        }
     }
   }
}
